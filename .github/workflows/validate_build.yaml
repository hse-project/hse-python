name: Validate Builds

on:
  push:
  pull_request:
    types: [opened, synchronize, reopened, edited]

jobs:
  build_ubuntu:
    runs-on: ubuntu-18.04

    steps:
    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install build-essential libbsd-dev pkg-config libmicrohttpd-dev liburcu-dev libyaml-dev libcurl4-openssl-dev python3-setuptools

    - uses: actions/checkout@v2

    - name: Setup python environment to run branch
      run: |
        python3 -m venv venv
        source venv/bin/activate
        python3 -m pip install -r requirements.txt

    - name: Build, Compile and run Unit tests
      run: |
        source venv/bin/activate
        meson builddir -Dwerror=true
        ninja -C builddir
        meson test -C builddir --print-errorlogs --no-stdsplit

    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: build-artifact-ubuntu-18.04
        path: builddir/meson-logs/

  format-check:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: Install dependencies
      run: |
        python3 -m pip install black

    - name: Black format check
      continue-on-error: true
      run: |
        black --check ./

  checkoss:
    runs-on: ubuntu-18.04

    steps:
    - uses: actions/checkout@v2

    - name: check for license
      run: |
        scripts/checkoss "${{ runner.temp }}" ./

    - uses: actions/upload-artifact@v2
      if: failure()
      with:
        name: checkoss-errors
        path: "${{ runner.temp }}"
